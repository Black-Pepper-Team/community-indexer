// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// SparseMerkleTreeNode is an auto generated low-level Go binding around an user-defined struct.
type SparseMerkleTreeNode struct {
	NodeType   uint8
	ChildLeft  uint64
	ChildRight uint64
	NodeHash   [32]byte
	Key        [32]byte
	Value      [32]byte
}

// SparseMerkleTreeProof is an auto generated low-level Go binding around an user-defined struct.
type SparseMerkleTreeProof struct {
	Root         [32]byte
	Siblings     [][32]byte
	Existence    bool
	Key          [32]byte
	Value        [32]byte
	AuxExistence bool
	AuxKey       [32]byte
	AuxValue     [32]byte
}

// PoseidonSMTMetaData contains all meta data concerning the PoseidonSMT contract.
var PoseidonSMTMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"}],\"name\":\"RootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ROOT_VALIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authenticationStorage_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"treeHeight_\",\"type\":\"uint256\"}],\"name\":\"__PoseidonSMT_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyOfElement_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"element_\",\"type\":\"bytes32\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authenticationStorage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key_\",\"type\":\"bytes32\"}],\"name\":\"getNodeByKey\",\"outputs\":[{\"components\":[{\"internalType\":\"enumSparseMerkleTree.NodeType\",\"name\":\"nodeType\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"childLeft\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"childRight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"nodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structSparseMerkleTree.Node\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key_\",\"type\":\"bytes32\"}],\"name\":\"getProof\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"existence\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"auxExistence\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"auxKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"auxValue\",\"type\":\"bytes32\"}],\"internalType\":\"structSparseMerkleTree.Proof\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root_\",\"type\":\"bytes32\"}],\"name\":\"isRootLatest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root_\",\"type\":\"bytes32\"}],\"name\":\"isRootValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyOfElement_\",\"type\":\"bytes32\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyOfElement_\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newElement_\",\"type\":\"bytes32\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]",
	Bin: "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000da565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000775760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612a9b62000104600039600081816108f7015281816109200152610a610152612a9b6000f3fe6080604052600436106100fe5760003560e01c8063715018a611610095578063ad3cb1cc11610064578063ad3cb1cc146102c9578063cffe967614610307578063d1de592a1461031d578063dc5077d11461033d578063f2fde38b1461035d57600080fd5b8063715018a6146102235780638492307f146102385780638da5cb5b1461025857806395bc2673146102a957600080fd5b806330ef41b4116100d157806330ef41b4146101a85780634f1ef286146101d857806352d1902d146101eb5780635ca1e1651461020e57600080fd5b8063029abf0114610103578063083a85801461012557806313f57c3e1461015b5780631b80bb3a1461017b575b600080fd5b34801561010f57600080fd5b5061012361011e3660046124f3565b61037d565b005b34801561013157600080fd5b5061014561014036600461251d565b6104c2565b604051610152919061254c565b60405180910390f35b34801561016757600080fd5b506101236101763660046125bc565b6104db565b34801561018757600080fd5b5061019b61019636600461251d565b610503565b60405161015291906125de565b3480156101b457600080fd5b506101c86101c336600461251d565b610516565b6040519015158152602001610152565b6101236101e63660046126a1565b610559565b3480156101f757600080fd5b50610200610574565b604051908152602001610152565b34801561021a57600080fd5b50610200610591565b34801561022f57600080fd5b506101236105a2565b34801561024457600080fd5b506101c861025336600461251d565b6105b6565b34801561026457600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b039091168152602001610152565b3480156102b557600080fd5b506101236102c436600461251d565b6105ca565b3480156102d557600080fd5b506102fa604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101529190612786565b34801561031357600080fd5b50610200610e1081565b34801561032957600080fd5b506101236103383660046125bc565b6105f0565b34801561034957600080fd5b50600054610291906001600160a01b031681565b34801561036957600080fd5b506101236103783660046127b9565b61069c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156103c25750825b90506000826001600160401b031660011480156103de5750303b155b9050811580156103ec575080155b1561040a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561043457845460ff60401b1916600160401b1785555b61043d336106dc565b6104486002876106ed565b61045860026106f7610789610823565b600080546001600160a01b0319166001600160a01b03891617905583156104b957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6104ca612453565b6104d5600283610833565b92915050565b6104e3610845565b6104eb61086f565b6104f760028383610891565b6104ff61089c565b5050565b61050b61248a565b6104d56002836108da565b60008161052557506000919050565b61052e826105b6565b806104d55750600082815260016020526040902054429061055290610e10906127ea565b1192915050565b6105616108ec565b61056a82610991565b6104ff8282610999565b600061057e610a56565b50600080516020612a4683398151915290565b600061059d6002610a9f565b905090565b6105aa610ac5565b6105b46000610b20565b565b6000816105c36002610a9f565b1492915050565b6105d2610845565b6105da61086f565b6105e5600282610b91565b6105ed61089c565b50565b6105f8610845565b61060061086f565b604080516020810182528381529051631caab9a760e01b815260009173__$8f7e095f182f3470dd3dcaa5f47b253a9b$__91631caab9a791610644916004016127fd565b602060405180830381865af4158015610661573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610685919061282f565b905061069360028284610b9b565b506104ff61089c565b6106a4610ac5565b6001600160a01b0381166106d357604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6105ed81610b20565b6106e4610ba6565b6105ed81610bef565b6104ff8282610bf7565b6040805180820182528381526020810183905290516314d2f97b60e11b815260009173__$ebe82a1924a894141c89e6680d3cbc7e88$__916329a5f2f69161074191600401612848565b602060405180830381865af415801561075e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610782919061282f565b9392505050565b604080516060810182528481526020810184905280820183905290516304b98e1d60e31b815260009173__$03320550cd1b629da90608251571b2532e$__916325cc70e8916107da91600401612879565b602060405180830381865af41580156107f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081b919061282f565b949350505050565b61082e838383610c76565b505050565b61083b612453565b6107828383610d27565b6000546001600160a01b031633146105b4576040516282b42960e81b815260040160405180910390fd5b426001600061087e6002610a9f565b8152602081019190915260400160002055565b61082e838383610ec3565b7f2cbc14f49c068133583f7cb530018af451c87c1cf1327cf2a4ff4698c4730aa46108c76002610a9f565b60405190815260200160405180910390a1565b6108e261248a565b6107828383610f49565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061097357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610967600080516020612a46833981519152546001600160a01b031690565b6001600160a01b031614155b156105b45760405163703e46dd60e11b815260040160405180910390fd5b6105ed610ac5565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109f3575060408051601f3d908101601f191682019092526109f09181019061282f565b60015b610a1b57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016106ca565b600080516020612a468339815191528114610a4c57604051632a87526960e21b8152600481018290526024016106ca565b61082e838361119b565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105b45760405163703e46dd60e11b815260040160405180910390fd5b6001808201546001600160401b03166000908152602083905260408120909101546104d5565b33610af77f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146105b45760405163118cdaa760e01b81523360048201526024016106ca565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6104ff82826111f1565b61082e838383611267565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166105b457604051631afcd79f60e31b815260040160405180910390fd5b6106a4610ba6565b6001820154600160c01b900463ffffffff1615610c6c5760405162461bcd60e51b815260206004820152602d60248201527f5370617273654d65726b6c65547265653a207472656520697320616c7265616460448201526c1e481a5b9a5d1a585b1a5e9959609a1b60648201526084016106ca565b6104ff8282611311565b610c7f836114a1565b15610cd85760405162461bcd60e51b815260206004820152602360248201527f5370617273654d65726b6c65547265653a2074726565206973206e6f7420656d60448201526270747960e81b60648201526084016106ca565b60018301805460ff60e01b1916600160e01b179055600290920180546001600160401b03938416600160401b026fffffffffffffffffffffffffffffffff199091169390921692909217179055565b610d2f612453565b610d37612453565b60018401546001600160401b031660005b6001860154600160c01b900463ffffffff168111610e735760008281526020879052604090819020815160c081019092528054829060ff166002811115610d9157610d91612536565b6002811115610da257610da2612536565b815281546001600160401b03610100820481166020840152600160481b909104166040820152600182015460608201526002820154608082015260039091015460a0909101529250600083516002811115610dff57610dff612536565b14610e7357600183516002811115610e1957610e19612536565b03610e2e5760808301518514610e7357610e61565b600185821c81169003610e505782604001516001600160401b03169150610e61565b82602001516001600160401b031691505b80610e6b816128a1565b915050610d48565b5083826080015114610eb8576040805160c08101909152806000815260006020820181905260408201819052606082018190526080820181905260a090910152610eba565b815b95945050505050565b60018301548390600160c01b900463ffffffff16610ef35760405162461bcd60e51b81526004016106ca906128ba565b6040805160c0810182526001808252600060208301819052928201839052606082018390526080820186905260a082018590528601549091610f4291879184916001600160401b0316906114db565b5050505050565b610f5161248a565b60018381015460408051610100810182526001600160401b0383166000908152602088905291822090930154600160c01b90920463ffffffff1692909181908152602001836001600160401b03811115610fad57610fad61268b565b604051908082528060200260200182016040528015610fd6578160200160208202803683370190505b50815260006020820181905260408201879052606082018190526080820181905260a0820181905260c090910152905061100e612453565b60018601546001600160401b031660005b84811161118f5761103088836116ff565b925060008351600281111561104757611047612536565b1461118f5760018351600281111561106157611061612536565b036110b557836060015183608001510361108b576001604085015260a0830151608085015261118f565b600160a08086019190915260808085015160c0870152908401805160e0870152519085015261118f565b6060840151600190821c811690036111245782604001516001600160401b0316915087600001600084602001516001600160401b03168152602001908152602001600020600101548460200151828151811061111357611113612903565b60200260200101818152505061117d565b82602001516001600160401b0316915087600001600084604001516001600160401b03168152602001908152602001600020600101548460200151828151811061117057611170612903565b6020026020010181815250505b80611187816128a1565b91505061101f565b50919695505050505050565b6111a482611797565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a28051156111e95761082e82826117fc565b6104ff611869565b60018201548290600160c01b900463ffffffff166112215760405162461bcd60e51b81526004016106ca906128ba565b600183015461123e90849084906001600160401b03166000611888565b600193909301805467ffffffffffffffff19166001600160401b03909416939093179092555050565b60018301548390600160c01b900463ffffffff166112975760405162461bcd60e51b81526004016106ca906128ba565b6040805160c0810182526001808252600060208301819052928201839052606082018390526080820186905260a0820185905286015490916112e691879184916001600160401b031690611cbb565b600195909501805467ffffffffffffffff19166001600160401b039096169590951790945550505050565b60008163ffffffff16116113855760405162461bcd60e51b815260206004820152603560248201527f5370617273654d65726b6c65547265653a206d6178206465707468206d7573746044820152742062652067726561746572207468616e207a65726f60581b60648201526084016106ca565b600182015463ffffffff600160c01b9091048116908216116114035760405162461bcd60e51b815260206004820152603160248201527f5370617273654d65726b6c65547265653a206d61782064657074682063616e206044820152701bdb9b1e481899481a5b98dc99585cd959607a1b60648201526084016106ca565b61010063ffffffff821611156114785760405162461bcd60e51b815260206004820152603460248201527f5370617273654d65726b6c65547265653a206d617820646570746820697320676044820152730726561746572207468616e2068617264206361760641b60648201526084016106ca565b6001909101805463ffffffff909216600160c01b0263ffffffff60c01b19909216919091179055565b60018101546000906114cc906001600160401b03600160801b8204811691600160401b900416612919565b6001600160401b031692915050565b600082815260208590526040808220815160c081019092528054829060ff16600281111561150b5761150b612536565b600281111561151c5761151c612536565b815281546001600160401b03610100820481166020840152600160481b909104166040820152600182015460608201526002820154608082015260039091015460a090910152905060008151600281111561157957611579612536565b036115965760405162461bcd60e51b81526004016106ca90612940565b6001815160028111156115ab576115ab612536565b036116775783608001518160800151146115d75760405162461bcd60e51b81526004016106ca90612989565b60008381526020869052604090208451815486929190829060ff1916600183600281111561160757611607612536565b02179055506020820151815460408401516001600160401b03908116600160481b0267ffffffffffffffff60481b19919093166101000216610100600160881b031990911617178155606082015160018201556080820151600282015560a09091015160039091015550826116da565b8161ffff16846080015160001c901c6001166001036116ba576116b5858583604001516001600160401b03168560016116b091906129d2565b6114db565b6116da565b6116da858583602001516001600160401b03168560016116b091906129d2565b6116e48582611f21565b60009384526020959095525050604090206001019190915550565b611707612453565b60008281526020849052604090819020815160c081019092528054829060ff16600281111561173857611738612536565b600281111561174957611749612536565b815281546001600160401b03610100820481166020840152600160481b909104166040820152600182015460608201526002820154608082015260039091015460a090910152905092915050565b806001600160a01b03163b6000036117cd57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016106ca565b600080516020612a4683398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161181991906129ed565b600060405180830381855af49150503d8060008114611854576040519150601f19603f3d011682016040523d82523d6000602084013e611859565b606091505b5091509150610eba85838361201d565b34156105b45760405163b398979f60e01b815260040160405180910390fd5b600082815260208590526040808220815160c08101909252805483929190829060ff1660028111156118bc576118bc612536565b60028111156118cd576118cd612536565b815281546001600160401b03610100820481166020840152600160481b909104166040820152600182015460608201526002820154608082015260039091015460a090910152905060008151600281111561192a5761192a612536565b036119475760405162461bcd60e51b81526004016106ca90612940565b60018151600281111561195c5761195c612536565b0361199857848160800151146119845760405162461bcd60e51b81526004016106ca90612989565b61198e8685612079565b506000905061081b565b6000600161ffff851687901c811690036119d8576119d1878784604001516001600160401b03168760016119cc91906129d2565b611888565b90506119fb565b6119f8878784602001516001600160401b03168760016119cc91906129d2565b90505b6040808301516001600160401b03908116600090815260208a8152838220549086015190921681529182205460ff91821692911690826002811115611a4257611a42612536565b148015611a6057506000816002811115611a5e57611a5e612536565b145b15611a7b57611a6f8988612079565b8294505050505061081b565b600083815260208a9052604081205460ff1690836002811115611aa057611aa0612536565b1480611abd57506000826002811115611abb57611abb612536565b145b8015611adb57506002816002811115611ad857611ad8612536565b14155b15611c06576000816002811115611af457611af4612536565b148015611b2d57506001826002811115611b1057611b10612536565b1480611b2d57506001836002811115611b2b57611b2b612536565b145b15611b8957611b3c8a89612079565b6001836002811115611b5057611b50612536565b03611b6f5784604001516001600160401b03169550505050505061081b565b84602001516001600160401b03169550505050505061081b565b6000836002811115611b9d57611b9d612536565b03611bd857600088815260208b905260409020805467ffffffffffffffff60481b1916600160481b6001600160401b03871602179055611c06565b600088815260208b905260409020805468ffffffffffffffff0019166101006001600160401b038716021790555b600088815260208b9052604090819020815160c081019092528054611c9b928d929091829060ff166002811115611c3f57611c3f612536565b6002811115611c5057611c50612536565b815281546001600160401b03610100820481166020840152600160481b909104166040820152600182015460608201526002820154608082015260039091015460a090910152611f21565b600089815260208c905260409020600101555086945061081b9350505050565b600082815260208590526040808220815160c08101909252805483929190829060ff166002811115611cef57611cef612536565b6002811115611d0057611d00612536565b815281546001600160401b03610100820481166020840152600160481b909104166040820152600182015460608201526002820154608082015260039091015460a0909101529050600081516002811115611d5d57611d5d612536565b03611d7457611d6c86866120ff565b91505061081b565b600181516002811115611d8957611d89612536565b03611e03578460800151816080015103611df65760405162461bcd60e51b815260206004820152602860248201527f5370617273654d65726b6c65547265653a20746865206b657920616c72656164604482015267792065786973747360c01b60648201526084016106ca565b611d6c86868387876121f7565b60008361ffff16866080015160001c901c600116600103611e7b57611e43878784604001516001600160401b0316876001611e3e91906129d2565b611cbb565b6000868152602089905260409020805467ffffffffffffffff60481b1916600160481b6001600160401b038416021790559050611ecb565b611e9b878784602001516001600160401b0316876001611e3e91906129d2565b6000868152602089905260409020805468ffffffffffffffff0019166101006001600160401b0384160217905590505b60008581526020889052604090819020815160c081019092528054611f04928a929091829060ff166002811115611c3f57611c3f612536565b6000868152602089905260409020600101555083915061081b9050565b60018201546000906124cf90600160e01b900460ff16611f4357612401611f59565b600284015480156124cf02176001600160401b03165b60018501549091506124cf90600160e01b900460ff16611f7b57612410611f9b565b8460020160089054906101000a900480156124cf02176001600160401b03165b9050600184516002811115611fb257611fb2612536565b03611fdb57611fd284608001518560a00151600160001b8463ffffffff16565b925050506104d5565b6020808501516001600160401b039081166000908152918790526040808320600190810154828901519093168452922090910154610eba919063ffffffff8516565b6060826120325761202d8261242a565b610782565b815115801561204957506001600160a01b0384163b155b1561207257604051639996b31560e01b81526001600160a01b03851660048201526024016106ca565b5080610782565b6000818152602083905260408120805470ffffffffffffffffffffffffffffffffff19168155600180820183905560028201839055600390910191909155820180546010906120d790600160801b90046001600160401b0316612a09565b91906101000a8154816001600160401b0302191690836001600160401b031602179055505050565b600061210b8383611f21565b60608301526001830180546000919060089061213690600160401b90046001600160401b0316612a09565b82546001600160401b039182166101009390930a83810292021916179091556000818152602086905260409020845181549293508592829060ff1916600183600281111561218657612186612536565b02179055506020820151815460408401516001600160401b03908116600160481b0267ffffffffffffffff60481b19919093166101000216610100600160881b031990911617178155606082015160018201556080820151600282015560a090910151600390910155905092915050565b6001850154600090600160c01b900463ffffffff1661ffff83161061226a5760405162461bcd60e51b815260206004820152602360248201527f5370617273654d65726b6c65547265653a206d617820646570746820726561636044820152621a195960ea1b60648201526084016106ca565b612272612453565b60808087015190860151600161ffff861692831c81168114929190911c8116148082036123515760006122b28a8a8a8a6122ad8b60016129d2565b6121f7565b905082156122fd576040805160c0810190915280600281526000602082018190526001600160401b0384166040830152606082018190526080820181905260a090910152935061233c565b6040805160c0810190915280600281526001600160401b0383166020820152600060408201819052606082018190526080820181905260a09091015293505b6123468a856120ff565b945050505050610eba565b600061235d8a8a6120ff565b905082156123a9576040805160c0810190915280600281526001600160401b03808a166020830152831660408201526000606082018190526080820181905260a09091015293506123e9565b6040805160c0810190915280600281526001600160401b038084166020830152891660408201526000606082018190526080820181905260a09091015293505b6123f38a856120ff565b9a9950505050505050505050565b60009182526020526040902090565b604080519384526020840192909252908201526060902090565b80511561243a5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040805160c08101909152806000815260006020820181905260408201819052606082018190526080820181905260a09091015290565b604080516101008101825260008082526060602083018190529282018190529181018290526080810182905260a0810182905260c0810182905260e081019190915290565b6105b4612a2f565b80356001600160a01b03811681146124ee57600080fd5b919050565b6000806040838503121561250657600080fd5b61250f836124d7565b946020939093013593505050565b60006020828403121561252f57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b815160c08201906003811061257157634e487b7160e01b600052602160045260246000fd5b8083525060208301516001600160401b0380821660208501528060408601511660408501525050606083015160608301526080830151608083015260a083015160a083015292915050565b600080604083850312156125cf57600080fd5b50508035926020909101359150565b60208082528251828201528281015161010060408401819052815161012085018190526000939283019184916101408701905b808410156126315784518252938501936001939093019290850190612611565b5060408801518015156060890152945060608801516080880152608088015160a088015260a0880151945061266a60c088018615159052565b60c088015160e088015260e088015182880152809550505050505092915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156126b457600080fd5b6126bd836124d7565b915060208301356001600160401b03808211156126d957600080fd5b818501915085601f8301126126ed57600080fd5b8135818111156126ff576126ff61268b565b604051601f8201601f19908116603f011681019083821181831017156127275761272761268b565b8160405282815288602084870101111561274057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561277d578181015183820152602001612765565b50506000910152565b60208152600082518060208401526127a5816040850160208701612762565b601f01601f19169190910160400192915050565b6000602082840312156127cb57600080fd5b610782826124d7565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d5576104d56127d4565b602081810190828460005b600181101561282557815183529183019190830190600101612808565b5050505092915050565b60006020828403121561284157600080fd5b5051919050565b60408101818360005b6002811015612870578151835260209283019290910190600101612851565b50505092915050565b60608101818360005b6003811015612870578151835260209283019290910190600101612882565b6000600182016128b3576128b36127d4565b5060010190565b60208082526029908201527f5370617273654d65726b6c65547265653a2074726565206973206e6f7420696e6040820152681a5d1a585b1a5e995960ba1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6001600160401b03828116828216039080821115612939576129396127d4565b5092915050565b60208082526029908201527f5370617273654d65726b6c65547265653a20746865206e6f646520646f6573206040820152681b9bdd08195e1a5cdd60ba1b606082015260800190565b60208082526029908201527f5370617273654d65726b6c65547265653a20746865206c65616620646f6573206040820152680dcdee840dac2e8c6d60bb1b606082015260800190565b61ffff818116838216019080821115612939576129396127d4565b600082516129ff818460208701612762565b9190910192915050565b60006001600160401b03808316818103612a2557612a256127d4565b6001019392505050565b634e487b7160e01b600052605160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212206503bdcd3878903307931666c05d278d9e22d759808fc982a7a6f7b02c41732c64736f6c63430008140033",
}

// PoseidonSMTABI is the input ABI used to generate the binding from.
// Deprecated: Use PoseidonSMTMetaData.ABI instead.
var PoseidonSMTABI = PoseidonSMTMetaData.ABI

// PoseidonSMTBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use PoseidonSMTMetaData.Bin instead.
var PoseidonSMTBin = PoseidonSMTMetaData.Bin

// DeployPoseidonSMT deploys a new Ethereum contract, binding an instance of PoseidonSMT to it.
func DeployPoseidonSMT(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *PoseidonSMT, error) {
	parsed, err := PoseidonSMTMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(PoseidonSMTBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &PoseidonSMT{PoseidonSMTCaller: PoseidonSMTCaller{contract: contract}, PoseidonSMTTransactor: PoseidonSMTTransactor{contract: contract}, PoseidonSMTFilterer: PoseidonSMTFilterer{contract: contract}}, nil
}

// PoseidonSMT is an auto generated Go binding around an Ethereum contract.
type PoseidonSMT struct {
	PoseidonSMTCaller     // Read-only binding to the contract
	PoseidonSMTTransactor // Write-only binding to the contract
	PoseidonSMTFilterer   // Log filterer for contract events
}

// PoseidonSMTCaller is an auto generated read-only Go binding around an Ethereum contract.
type PoseidonSMTCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PoseidonSMTTransactor is an auto generated write-only Go binding around an Ethereum contract.
type PoseidonSMTTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PoseidonSMTFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type PoseidonSMTFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PoseidonSMTSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type PoseidonSMTSession struct {
	Contract     *PoseidonSMT      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// PoseidonSMTCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type PoseidonSMTCallerSession struct {
	Contract *PoseidonSMTCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// PoseidonSMTTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type PoseidonSMTTransactorSession struct {
	Contract     *PoseidonSMTTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// PoseidonSMTRaw is an auto generated low-level Go binding around an Ethereum contract.
type PoseidonSMTRaw struct {
	Contract *PoseidonSMT // Generic contract binding to access the raw methods on
}

// PoseidonSMTCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type PoseidonSMTCallerRaw struct {
	Contract *PoseidonSMTCaller // Generic read-only contract binding to access the raw methods on
}

// PoseidonSMTTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type PoseidonSMTTransactorRaw struct {
	Contract *PoseidonSMTTransactor // Generic write-only contract binding to access the raw methods on
}

// NewPoseidonSMT creates a new instance of PoseidonSMT, bound to a specific deployed contract.
func NewPoseidonSMT(address common.Address, backend bind.ContractBackend) (*PoseidonSMT, error) {
	contract, err := bindPoseidonSMT(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &PoseidonSMT{PoseidonSMTCaller: PoseidonSMTCaller{contract: contract}, PoseidonSMTTransactor: PoseidonSMTTransactor{contract: contract}, PoseidonSMTFilterer: PoseidonSMTFilterer{contract: contract}}, nil
}

// NewPoseidonSMTCaller creates a new read-only instance of PoseidonSMT, bound to a specific deployed contract.
func NewPoseidonSMTCaller(address common.Address, caller bind.ContractCaller) (*PoseidonSMTCaller, error) {
	contract, err := bindPoseidonSMT(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &PoseidonSMTCaller{contract: contract}, nil
}

// NewPoseidonSMTTransactor creates a new write-only instance of PoseidonSMT, bound to a specific deployed contract.
func NewPoseidonSMTTransactor(address common.Address, transactor bind.ContractTransactor) (*PoseidonSMTTransactor, error) {
	contract, err := bindPoseidonSMT(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &PoseidonSMTTransactor{contract: contract}, nil
}

// NewPoseidonSMTFilterer creates a new log filterer instance of PoseidonSMT, bound to a specific deployed contract.
func NewPoseidonSMTFilterer(address common.Address, filterer bind.ContractFilterer) (*PoseidonSMTFilterer, error) {
	contract, err := bindPoseidonSMT(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &PoseidonSMTFilterer{contract: contract}, nil
}

// bindPoseidonSMT binds a generic wrapper to an already deployed contract.
func bindPoseidonSMT(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := PoseidonSMTMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PoseidonSMT *PoseidonSMTRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _PoseidonSMT.Contract.PoseidonSMTCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PoseidonSMT *PoseidonSMTRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.PoseidonSMTTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PoseidonSMT *PoseidonSMTRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.PoseidonSMTTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PoseidonSMT *PoseidonSMTCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _PoseidonSMT.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PoseidonSMT *PoseidonSMTTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PoseidonSMT *PoseidonSMTTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.contract.Transact(opts, method, params...)
}

// ROOTVALIDITY is a free data retrieval call binding the contract method 0xcffe9676.
//
// Solidity: function ROOT_VALIDITY() view returns(uint256)
func (_PoseidonSMT *PoseidonSMTCaller) ROOTVALIDITY(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "ROOT_VALIDITY")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ROOTVALIDITY is a free data retrieval call binding the contract method 0xcffe9676.
//
// Solidity: function ROOT_VALIDITY() view returns(uint256)
func (_PoseidonSMT *PoseidonSMTSession) ROOTVALIDITY() (*big.Int, error) {
	return _PoseidonSMT.Contract.ROOTVALIDITY(&_PoseidonSMT.CallOpts)
}

// ROOTVALIDITY is a free data retrieval call binding the contract method 0xcffe9676.
//
// Solidity: function ROOT_VALIDITY() view returns(uint256)
func (_PoseidonSMT *PoseidonSMTCallerSession) ROOTVALIDITY() (*big.Int, error) {
	return _PoseidonSMT.Contract.ROOTVALIDITY(&_PoseidonSMT.CallOpts)
}

// UPGRADEINTERFACEVERSION is a free data retrieval call binding the contract method 0xad3cb1cc.
//
// Solidity: function UPGRADE_INTERFACE_VERSION() view returns(string)
func (_PoseidonSMT *PoseidonSMTCaller) UPGRADEINTERFACEVERSION(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "UPGRADE_INTERFACE_VERSION")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// UPGRADEINTERFACEVERSION is a free data retrieval call binding the contract method 0xad3cb1cc.
//
// Solidity: function UPGRADE_INTERFACE_VERSION() view returns(string)
func (_PoseidonSMT *PoseidonSMTSession) UPGRADEINTERFACEVERSION() (string, error) {
	return _PoseidonSMT.Contract.UPGRADEINTERFACEVERSION(&_PoseidonSMT.CallOpts)
}

// UPGRADEINTERFACEVERSION is a free data retrieval call binding the contract method 0xad3cb1cc.
//
// Solidity: function UPGRADE_INTERFACE_VERSION() view returns(string)
func (_PoseidonSMT *PoseidonSMTCallerSession) UPGRADEINTERFACEVERSION() (string, error) {
	return _PoseidonSMT.Contract.UPGRADEINTERFACEVERSION(&_PoseidonSMT.CallOpts)
}

// AuthenticationStorage is a free data retrieval call binding the contract method 0xdc5077d1.
//
// Solidity: function authenticationStorage() view returns(address)
func (_PoseidonSMT *PoseidonSMTCaller) AuthenticationStorage(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "authenticationStorage")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AuthenticationStorage is a free data retrieval call binding the contract method 0xdc5077d1.
//
// Solidity: function authenticationStorage() view returns(address)
func (_PoseidonSMT *PoseidonSMTSession) AuthenticationStorage() (common.Address, error) {
	return _PoseidonSMT.Contract.AuthenticationStorage(&_PoseidonSMT.CallOpts)
}

// AuthenticationStorage is a free data retrieval call binding the contract method 0xdc5077d1.
//
// Solidity: function authenticationStorage() view returns(address)
func (_PoseidonSMT *PoseidonSMTCallerSession) AuthenticationStorage() (common.Address, error) {
	return _PoseidonSMT.Contract.AuthenticationStorage(&_PoseidonSMT.CallOpts)
}

// GetNodeByKey is a free data retrieval call binding the contract method 0x083a8580.
//
// Solidity: function getNodeByKey(bytes32 key_) view returns((uint8,uint64,uint64,bytes32,bytes32,bytes32))
func (_PoseidonSMT *PoseidonSMTCaller) GetNodeByKey(opts *bind.CallOpts, key_ [32]byte) (SparseMerkleTreeNode, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "getNodeByKey", key_)

	if err != nil {
		return *new(SparseMerkleTreeNode), err
	}

	out0 := *abi.ConvertType(out[0], new(SparseMerkleTreeNode)).(*SparseMerkleTreeNode)

	return out0, err

}

// GetNodeByKey is a free data retrieval call binding the contract method 0x083a8580.
//
// Solidity: function getNodeByKey(bytes32 key_) view returns((uint8,uint64,uint64,bytes32,bytes32,bytes32))
func (_PoseidonSMT *PoseidonSMTSession) GetNodeByKey(key_ [32]byte) (SparseMerkleTreeNode, error) {
	return _PoseidonSMT.Contract.GetNodeByKey(&_PoseidonSMT.CallOpts, key_)
}

// GetNodeByKey is a free data retrieval call binding the contract method 0x083a8580.
//
// Solidity: function getNodeByKey(bytes32 key_) view returns((uint8,uint64,uint64,bytes32,bytes32,bytes32))
func (_PoseidonSMT *PoseidonSMTCallerSession) GetNodeByKey(key_ [32]byte) (SparseMerkleTreeNode, error) {
	return _PoseidonSMT.Contract.GetNodeByKey(&_PoseidonSMT.CallOpts, key_)
}

// GetProof is a free data retrieval call binding the contract method 0x1b80bb3a.
//
// Solidity: function getProof(bytes32 key_) view returns((bytes32,bytes32[],bool,bytes32,bytes32,bool,bytes32,bytes32))
func (_PoseidonSMT *PoseidonSMTCaller) GetProof(opts *bind.CallOpts, key_ [32]byte) (SparseMerkleTreeProof, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "getProof", key_)

	if err != nil {
		return *new(SparseMerkleTreeProof), err
	}

	out0 := *abi.ConvertType(out[0], new(SparseMerkleTreeProof)).(*SparseMerkleTreeProof)

	return out0, err

}

// GetProof is a free data retrieval call binding the contract method 0x1b80bb3a.
//
// Solidity: function getProof(bytes32 key_) view returns((bytes32,bytes32[],bool,bytes32,bytes32,bool,bytes32,bytes32))
func (_PoseidonSMT *PoseidonSMTSession) GetProof(key_ [32]byte) (SparseMerkleTreeProof, error) {
	return _PoseidonSMT.Contract.GetProof(&_PoseidonSMT.CallOpts, key_)
}

// GetProof is a free data retrieval call binding the contract method 0x1b80bb3a.
//
// Solidity: function getProof(bytes32 key_) view returns((bytes32,bytes32[],bool,bytes32,bytes32,bool,bytes32,bytes32))
func (_PoseidonSMT *PoseidonSMTCallerSession) GetProof(key_ [32]byte) (SparseMerkleTreeProof, error) {
	return _PoseidonSMT.Contract.GetProof(&_PoseidonSMT.CallOpts, key_)
}

// GetRoot is a free data retrieval call binding the contract method 0x5ca1e165.
//
// Solidity: function getRoot() view returns(bytes32)
func (_PoseidonSMT *PoseidonSMTCaller) GetRoot(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "getRoot")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoot is a free data retrieval call binding the contract method 0x5ca1e165.
//
// Solidity: function getRoot() view returns(bytes32)
func (_PoseidonSMT *PoseidonSMTSession) GetRoot() ([32]byte, error) {
	return _PoseidonSMT.Contract.GetRoot(&_PoseidonSMT.CallOpts)
}

// GetRoot is a free data retrieval call binding the contract method 0x5ca1e165.
//
// Solidity: function getRoot() view returns(bytes32)
func (_PoseidonSMT *PoseidonSMTCallerSession) GetRoot() ([32]byte, error) {
	return _PoseidonSMT.Contract.GetRoot(&_PoseidonSMT.CallOpts)
}

// IsRootLatest is a free data retrieval call binding the contract method 0x8492307f.
//
// Solidity: function isRootLatest(bytes32 root_) view returns(bool)
func (_PoseidonSMT *PoseidonSMTCaller) IsRootLatest(opts *bind.CallOpts, root_ [32]byte) (bool, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "isRootLatest", root_)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsRootLatest is a free data retrieval call binding the contract method 0x8492307f.
//
// Solidity: function isRootLatest(bytes32 root_) view returns(bool)
func (_PoseidonSMT *PoseidonSMTSession) IsRootLatest(root_ [32]byte) (bool, error) {
	return _PoseidonSMT.Contract.IsRootLatest(&_PoseidonSMT.CallOpts, root_)
}

// IsRootLatest is a free data retrieval call binding the contract method 0x8492307f.
//
// Solidity: function isRootLatest(bytes32 root_) view returns(bool)
func (_PoseidonSMT *PoseidonSMTCallerSession) IsRootLatest(root_ [32]byte) (bool, error) {
	return _PoseidonSMT.Contract.IsRootLatest(&_PoseidonSMT.CallOpts, root_)
}

// IsRootValid is a free data retrieval call binding the contract method 0x30ef41b4.
//
// Solidity: function isRootValid(bytes32 root_) view returns(bool)
func (_PoseidonSMT *PoseidonSMTCaller) IsRootValid(opts *bind.CallOpts, root_ [32]byte) (bool, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "isRootValid", root_)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsRootValid is a free data retrieval call binding the contract method 0x30ef41b4.
//
// Solidity: function isRootValid(bytes32 root_) view returns(bool)
func (_PoseidonSMT *PoseidonSMTSession) IsRootValid(root_ [32]byte) (bool, error) {
	return _PoseidonSMT.Contract.IsRootValid(&_PoseidonSMT.CallOpts, root_)
}

// IsRootValid is a free data retrieval call binding the contract method 0x30ef41b4.
//
// Solidity: function isRootValid(bytes32 root_) view returns(bool)
func (_PoseidonSMT *PoseidonSMTCallerSession) IsRootValid(root_ [32]byte) (bool, error) {
	return _PoseidonSMT.Contract.IsRootValid(&_PoseidonSMT.CallOpts, root_)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_PoseidonSMT *PoseidonSMTCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_PoseidonSMT *PoseidonSMTSession) Owner() (common.Address, error) {
	return _PoseidonSMT.Contract.Owner(&_PoseidonSMT.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_PoseidonSMT *PoseidonSMTCallerSession) Owner() (common.Address, error) {
	return _PoseidonSMT.Contract.Owner(&_PoseidonSMT.CallOpts)
}

// ProxiableUUID is a free data retrieval call binding the contract method 0x52d1902d.
//
// Solidity: function proxiableUUID() view returns(bytes32)
func (_PoseidonSMT *PoseidonSMTCaller) ProxiableUUID(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _PoseidonSMT.contract.Call(opts, &out, "proxiableUUID")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// ProxiableUUID is a free data retrieval call binding the contract method 0x52d1902d.
//
// Solidity: function proxiableUUID() view returns(bytes32)
func (_PoseidonSMT *PoseidonSMTSession) ProxiableUUID() ([32]byte, error) {
	return _PoseidonSMT.Contract.ProxiableUUID(&_PoseidonSMT.CallOpts)
}

// ProxiableUUID is a free data retrieval call binding the contract method 0x52d1902d.
//
// Solidity: function proxiableUUID() view returns(bytes32)
func (_PoseidonSMT *PoseidonSMTCallerSession) ProxiableUUID() ([32]byte, error) {
	return _PoseidonSMT.Contract.ProxiableUUID(&_PoseidonSMT.CallOpts)
}

// PoseidonSMTInit is a paid mutator transaction binding the contract method 0x029abf01.
//
// Solidity: function __PoseidonSMT_init(address authenticationStorage_, uint256 treeHeight_) returns()
func (_PoseidonSMT *PoseidonSMTTransactor) PoseidonSMTInit(opts *bind.TransactOpts, authenticationStorage_ common.Address, treeHeight_ *big.Int) (*types.Transaction, error) {
	return _PoseidonSMT.contract.Transact(opts, "__PoseidonSMT_init", authenticationStorage_, treeHeight_)
}

// PoseidonSMTInit is a paid mutator transaction binding the contract method 0x029abf01.
//
// Solidity: function __PoseidonSMT_init(address authenticationStorage_, uint256 treeHeight_) returns()
func (_PoseidonSMT *PoseidonSMTSession) PoseidonSMTInit(authenticationStorage_ common.Address, treeHeight_ *big.Int) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.PoseidonSMTInit(&_PoseidonSMT.TransactOpts, authenticationStorage_, treeHeight_)
}

// PoseidonSMTInit is a paid mutator transaction binding the contract method 0x029abf01.
//
// Solidity: function __PoseidonSMT_init(address authenticationStorage_, uint256 treeHeight_) returns()
func (_PoseidonSMT *PoseidonSMTTransactorSession) PoseidonSMTInit(authenticationStorage_ common.Address, treeHeight_ *big.Int) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.PoseidonSMTInit(&_PoseidonSMT.TransactOpts, authenticationStorage_, treeHeight_)
}

// Add is a paid mutator transaction binding the contract method 0xd1de592a.
//
// Solidity: function add(bytes32 keyOfElement_, bytes32 element_) returns()
func (_PoseidonSMT *PoseidonSMTTransactor) Add(opts *bind.TransactOpts, keyOfElement_ [32]byte, element_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.contract.Transact(opts, "add", keyOfElement_, element_)
}

// Add is a paid mutator transaction binding the contract method 0xd1de592a.
//
// Solidity: function add(bytes32 keyOfElement_, bytes32 element_) returns()
func (_PoseidonSMT *PoseidonSMTSession) Add(keyOfElement_ [32]byte, element_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.Add(&_PoseidonSMT.TransactOpts, keyOfElement_, element_)
}

// Add is a paid mutator transaction binding the contract method 0xd1de592a.
//
// Solidity: function add(bytes32 keyOfElement_, bytes32 element_) returns()
func (_PoseidonSMT *PoseidonSMTTransactorSession) Add(keyOfElement_ [32]byte, element_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.Add(&_PoseidonSMT.TransactOpts, keyOfElement_, element_)
}

// Remove is a paid mutator transaction binding the contract method 0x95bc2673.
//
// Solidity: function remove(bytes32 keyOfElement_) returns()
func (_PoseidonSMT *PoseidonSMTTransactor) Remove(opts *bind.TransactOpts, keyOfElement_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.contract.Transact(opts, "remove", keyOfElement_)
}

// Remove is a paid mutator transaction binding the contract method 0x95bc2673.
//
// Solidity: function remove(bytes32 keyOfElement_) returns()
func (_PoseidonSMT *PoseidonSMTSession) Remove(keyOfElement_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.Remove(&_PoseidonSMT.TransactOpts, keyOfElement_)
}

// Remove is a paid mutator transaction binding the contract method 0x95bc2673.
//
// Solidity: function remove(bytes32 keyOfElement_) returns()
func (_PoseidonSMT *PoseidonSMTTransactorSession) Remove(keyOfElement_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.Remove(&_PoseidonSMT.TransactOpts, keyOfElement_)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_PoseidonSMT *PoseidonSMTTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PoseidonSMT.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_PoseidonSMT *PoseidonSMTSession) RenounceOwnership() (*types.Transaction, error) {
	return _PoseidonSMT.Contract.RenounceOwnership(&_PoseidonSMT.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_PoseidonSMT *PoseidonSMTTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _PoseidonSMT.Contract.RenounceOwnership(&_PoseidonSMT.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_PoseidonSMT *PoseidonSMTTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _PoseidonSMT.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_PoseidonSMT *PoseidonSMTSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.TransferOwnership(&_PoseidonSMT.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_PoseidonSMT *PoseidonSMTTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.TransferOwnership(&_PoseidonSMT.TransactOpts, newOwner)
}

// Update is a paid mutator transaction binding the contract method 0x13f57c3e.
//
// Solidity: function update(bytes32 keyOfElement_, bytes32 newElement_) returns()
func (_PoseidonSMT *PoseidonSMTTransactor) Update(opts *bind.TransactOpts, keyOfElement_ [32]byte, newElement_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.contract.Transact(opts, "update", keyOfElement_, newElement_)
}

// Update is a paid mutator transaction binding the contract method 0x13f57c3e.
//
// Solidity: function update(bytes32 keyOfElement_, bytes32 newElement_) returns()
func (_PoseidonSMT *PoseidonSMTSession) Update(keyOfElement_ [32]byte, newElement_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.Update(&_PoseidonSMT.TransactOpts, keyOfElement_, newElement_)
}

// Update is a paid mutator transaction binding the contract method 0x13f57c3e.
//
// Solidity: function update(bytes32 keyOfElement_, bytes32 newElement_) returns()
func (_PoseidonSMT *PoseidonSMTTransactorSession) Update(keyOfElement_ [32]byte, newElement_ [32]byte) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.Update(&_PoseidonSMT.TransactOpts, keyOfElement_, newElement_)
}

// UpgradeToAndCall is a paid mutator transaction binding the contract method 0x4f1ef286.
//
// Solidity: function upgradeToAndCall(address newImplementation, bytes data) payable returns()
func (_PoseidonSMT *PoseidonSMTTransactor) UpgradeToAndCall(opts *bind.TransactOpts, newImplementation common.Address, data []byte) (*types.Transaction, error) {
	return _PoseidonSMT.contract.Transact(opts, "upgradeToAndCall", newImplementation, data)
}

// UpgradeToAndCall is a paid mutator transaction binding the contract method 0x4f1ef286.
//
// Solidity: function upgradeToAndCall(address newImplementation, bytes data) payable returns()
func (_PoseidonSMT *PoseidonSMTSession) UpgradeToAndCall(newImplementation common.Address, data []byte) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.UpgradeToAndCall(&_PoseidonSMT.TransactOpts, newImplementation, data)
}

// UpgradeToAndCall is a paid mutator transaction binding the contract method 0x4f1ef286.
//
// Solidity: function upgradeToAndCall(address newImplementation, bytes data) payable returns()
func (_PoseidonSMT *PoseidonSMTTransactorSession) UpgradeToAndCall(newImplementation common.Address, data []byte) (*types.Transaction, error) {
	return _PoseidonSMT.Contract.UpgradeToAndCall(&_PoseidonSMT.TransactOpts, newImplementation, data)
}

// PoseidonSMTInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the PoseidonSMT contract.
type PoseidonSMTInitializedIterator struct {
	Event *PoseidonSMTInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PoseidonSMTInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PoseidonSMTInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PoseidonSMTInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PoseidonSMTInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PoseidonSMTInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PoseidonSMTInitialized represents a Initialized event raised by the PoseidonSMT contract.
type PoseidonSMTInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_PoseidonSMT *PoseidonSMTFilterer) FilterInitialized(opts *bind.FilterOpts) (*PoseidonSMTInitializedIterator, error) {

	logs, sub, err := _PoseidonSMT.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &PoseidonSMTInitializedIterator{contract: _PoseidonSMT.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_PoseidonSMT *PoseidonSMTFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *PoseidonSMTInitialized) (event.Subscription, error) {

	logs, sub, err := _PoseidonSMT.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PoseidonSMTInitialized)
				if err := _PoseidonSMT.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_PoseidonSMT *PoseidonSMTFilterer) ParseInitialized(log types.Log) (*PoseidonSMTInitialized, error) {
	event := new(PoseidonSMTInitialized)
	if err := _PoseidonSMT.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PoseidonSMTOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the PoseidonSMT contract.
type PoseidonSMTOwnershipTransferredIterator struct {
	Event *PoseidonSMTOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PoseidonSMTOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PoseidonSMTOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PoseidonSMTOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PoseidonSMTOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PoseidonSMTOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PoseidonSMTOwnershipTransferred represents a OwnershipTransferred event raised by the PoseidonSMT contract.
type PoseidonSMTOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_PoseidonSMT *PoseidonSMTFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*PoseidonSMTOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _PoseidonSMT.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &PoseidonSMTOwnershipTransferredIterator{contract: _PoseidonSMT.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_PoseidonSMT *PoseidonSMTFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *PoseidonSMTOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _PoseidonSMT.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PoseidonSMTOwnershipTransferred)
				if err := _PoseidonSMT.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_PoseidonSMT *PoseidonSMTFilterer) ParseOwnershipTransferred(log types.Log) (*PoseidonSMTOwnershipTransferred, error) {
	event := new(PoseidonSMTOwnershipTransferred)
	if err := _PoseidonSMT.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PoseidonSMTRootUpdatedIterator is returned from FilterRootUpdated and is used to iterate over the raw logs and unpacked data for RootUpdated events raised by the PoseidonSMT contract.
type PoseidonSMTRootUpdatedIterator struct {
	Event *PoseidonSMTRootUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PoseidonSMTRootUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PoseidonSMTRootUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PoseidonSMTRootUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PoseidonSMTRootUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PoseidonSMTRootUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PoseidonSMTRootUpdated represents a RootUpdated event raised by the PoseidonSMT contract.
type PoseidonSMTRootUpdated struct {
	Root [32]byte
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterRootUpdated is a free log retrieval operation binding the contract event 0x2cbc14f49c068133583f7cb530018af451c87c1cf1327cf2a4ff4698c4730aa4.
//
// Solidity: event RootUpdated(bytes32 root)
func (_PoseidonSMT *PoseidonSMTFilterer) FilterRootUpdated(opts *bind.FilterOpts) (*PoseidonSMTRootUpdatedIterator, error) {

	logs, sub, err := _PoseidonSMT.contract.FilterLogs(opts, "RootUpdated")
	if err != nil {
		return nil, err
	}
	return &PoseidonSMTRootUpdatedIterator{contract: _PoseidonSMT.contract, event: "RootUpdated", logs: logs, sub: sub}, nil
}

// WatchRootUpdated is a free log subscription operation binding the contract event 0x2cbc14f49c068133583f7cb530018af451c87c1cf1327cf2a4ff4698c4730aa4.
//
// Solidity: event RootUpdated(bytes32 root)
func (_PoseidonSMT *PoseidonSMTFilterer) WatchRootUpdated(opts *bind.WatchOpts, sink chan<- *PoseidonSMTRootUpdated) (event.Subscription, error) {

	logs, sub, err := _PoseidonSMT.contract.WatchLogs(opts, "RootUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PoseidonSMTRootUpdated)
				if err := _PoseidonSMT.contract.UnpackLog(event, "RootUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRootUpdated is a log parse operation binding the contract event 0x2cbc14f49c068133583f7cb530018af451c87c1cf1327cf2a4ff4698c4730aa4.
//
// Solidity: event RootUpdated(bytes32 root)
func (_PoseidonSMT *PoseidonSMTFilterer) ParseRootUpdated(log types.Log) (*PoseidonSMTRootUpdated, error) {
	event := new(PoseidonSMTRootUpdated)
	if err := _PoseidonSMT.contract.UnpackLog(event, "RootUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// PoseidonSMTUpgradedIterator is returned from FilterUpgraded and is used to iterate over the raw logs and unpacked data for Upgraded events raised by the PoseidonSMT contract.
type PoseidonSMTUpgradedIterator struct {
	Event *PoseidonSMTUpgraded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PoseidonSMTUpgradedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PoseidonSMTUpgraded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PoseidonSMTUpgraded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PoseidonSMTUpgradedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PoseidonSMTUpgradedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PoseidonSMTUpgraded represents a Upgraded event raised by the PoseidonSMT contract.
type PoseidonSMTUpgraded struct {
	Implementation common.Address
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterUpgraded is a free log retrieval operation binding the contract event 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b.
//
// Solidity: event Upgraded(address indexed implementation)
func (_PoseidonSMT *PoseidonSMTFilterer) FilterUpgraded(opts *bind.FilterOpts, implementation []common.Address) (*PoseidonSMTUpgradedIterator, error) {

	var implementationRule []interface{}
	for _, implementationItem := range implementation {
		implementationRule = append(implementationRule, implementationItem)
	}

	logs, sub, err := _PoseidonSMT.contract.FilterLogs(opts, "Upgraded", implementationRule)
	if err != nil {
		return nil, err
	}
	return &PoseidonSMTUpgradedIterator{contract: _PoseidonSMT.contract, event: "Upgraded", logs: logs, sub: sub}, nil
}

// WatchUpgraded is a free log subscription operation binding the contract event 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b.
//
// Solidity: event Upgraded(address indexed implementation)
func (_PoseidonSMT *PoseidonSMTFilterer) WatchUpgraded(opts *bind.WatchOpts, sink chan<- *PoseidonSMTUpgraded, implementation []common.Address) (event.Subscription, error) {

	var implementationRule []interface{}
	for _, implementationItem := range implementation {
		implementationRule = append(implementationRule, implementationItem)
	}

	logs, sub, err := _PoseidonSMT.contract.WatchLogs(opts, "Upgraded", implementationRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PoseidonSMTUpgraded)
				if err := _PoseidonSMT.contract.UnpackLog(event, "Upgraded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUpgraded is a log parse operation binding the contract event 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b.
//
// Solidity: event Upgraded(address indexed implementation)
func (_PoseidonSMT *PoseidonSMTFilterer) ParseUpgraded(log types.Log) (*PoseidonSMTUpgraded, error) {
	event := new(PoseidonSMTUpgraded)
	if err := _PoseidonSMT.contract.UnpackLog(event, "Upgraded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
